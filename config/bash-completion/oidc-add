#!/bin/bash

_isSingleOpt() {
  for word in $singleOpts; do
    if [[ "$word" = "$1" ]]; then
      return 0
    fi
  done
  return 1
}

_needArgument() {
  local IFS=$'\x20'
  singleOpts="--list --lock --unlock --help --usage --version"
	for ((i=1;i<$COMP_CWORD;i++)); do
		local word="${COMP_WORDS[i]}"
    local pre="${COMP_WORDS[i-1]}"
		if [[ $word != -* ]] && [[ "$word" != "=" ]] && [[ "$pre" != "=" ]]; then
			return 1
		fi
    if _isSingleOpt $word ; then
      return 1
    fi
	done
  return 0
}

_oidc-add() {
	local cur prev opts
	COMPREPLY=()
	cur="${COMP_WORDS[COMP_CWORD]}"
	prev="${COMP_WORDS[COMP_CWORD-1]}"
	local IFS=$'\t\n'
  opts="--list 
	--no-seccomp 
	--print 
	--remove 
	--lifetime=
	--lock 
	--unlock 
	--debug 
	--verbose 
	--help 
	--usage 
	--version "
	if [ -d ~/.config ];then
		agentdir="$HOME/.config/oidc-agent"
	else
		agentdir="$HOME/.oidc-agent"
	fi
	shortnames=`ls $agentdir | grep -v "config" | sed -e 's/$/& /g'`

	if [[ ${cur} == -* ]] ; then
		COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
		return 0
	fi
	if [[ ${cur} == * ]] &&  _needArgument ; then 
		COMPREPLY=( $(compgen -W "${shortnames}" -- ${cur}) )
		return 0
	fi
  case $prev in 
    --lifetime=)
      local value=999999999999
      COMPREPLY=( $( compgen -W "{${value:1:((${#value}-2))}}" \
                      -- "$cur" ) )
      return 
      ;;
  esac
	return 0
}

complete -o nospace -F _oidc-add oidc-add
